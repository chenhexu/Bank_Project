# Multi-stage build for combined frontend + backend
FROM node:18 AS frontend-builder

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci

COPY frontend/ ./
RUN npm run build

# Main container with both services
FROM python:3.11-slim

# Install system dependencies and Node.js
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    supervisor \
    nginx \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Set up working directories
WORKDIR /app

# Copy and install backend dependencies
COPY backend/requirements.txt ./backend/
RUN pip install --no-cache-dir -r backend/requirements.txt

# Copy backend code
COPY backend/ ./backend/

# Copy built frontend from builder stage
COPY --from=frontend-builder /app/frontend/.next/standalone ./frontend/
COPY --from=frontend-builder /app/frontend/.next/static ./frontend/.next/static
COPY --from=frontend-builder /app/frontend/public ./frontend/public

# Create nginx config
RUN echo 'server { \
    listen 8080; \
    server_name _; \
    \
    location /api/ { \
        proxy_pass http://127.0.0.1:8000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    location ~ ^/(register|login|deposit|withdraw|transfer|balance|transactions|profile|forgot-password|generate-recovery-code|reset-password|user-count|google-config|facebook-config|exchange-google-code|exchange-facebook-code)$ { \
        proxy_pass http://127.0.0.1:8000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    location / { \
        proxy_pass http://127.0.0.1:3000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/sites-available/default

# Create supervisor config
RUN printf '[supervisord]\nnodaemon=true\nuser=root\n\n[program:backend]\ncommand=python -m uvicorn main:app --host 0.0.0.0 --port 8000\ndirectory=/app/backend\nautostart=true\nautorestart=true\nstdout_logfile=/var/log/backend.log\nstderr_logfile=/var/log/backend.log\n\n[program:frontend]\ncommand=node server.js\ndirectory=/app/frontend\nautostart=true\nautorestart=true\nstdout_logfile=/var/log/frontend.log\nstderr_logfile=/var/log/frontend.log\nenvironment=NEXT_PUBLIC_API_URL="http://localhost:8000",PORT="3000",HOSTNAME="0.0.0.0"\n\n[program:nginx]\ncommand=nginx -g "daemon off;"\nautostart=true\nautorestart=true\nstdout_logfile=/var/log/nginx.log\nstderr_logfile=/var/log/nginx.log\n' > /etc/supervisor/conf.d/supervisord.conf

# Create data directory and set permissions
RUN mkdir -p /app/data && \
    chown -R www-data:www-data /app && \
    chmod -R 755 /app

# Expose port 8080 (nginx will handle routing)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Start supervisor (which starts all services)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]